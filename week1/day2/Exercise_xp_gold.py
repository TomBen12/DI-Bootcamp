## exerise from class video on sets
# #Scroll to bottom to see solution
# # You are working for the school Principal. We have a database of school students:
# school = {'Bobby','Tammy','Jammy','Sally','Danny'}

# #during class, the teachers take attendance and compile it into a list. 
# attendance_list = ['Jammy', 'Bobby', 'Danny', 'Sally']

# #using what you learned about sets, create a piece of code that the school principal can use to immediately find out who missed class so they can call the parents. (Imagine if the list had 1000s of students. The principal can use the lists generated by the teachers + the school database to use python and make his/her job easier): Find the students that miss class!

# absent_students = school.difference(attendance_list)
# print(absent_students)

#remote exercise XP
# my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# counter = 0
# for element in my_list:
#     counter += element

# print(counter, end=)



"""
Exercise 1: Concatenate lists
Instructions
Write code that concatenates two lists together without using the + sign.
"""

# my_list = [1, 2, 3, 4, 5, 6]
# my_other_list = [7, "chocolate", 9, 10, 11, 12]

# my_list.extend(my_other_list)
# print(my_list)
"""
Exercise 2: Range of numbers
Instructions:
Create a loop that goes from 1500 to 2500 and prints all multiples of 5 and 7.
"""

# for number in range(1500, 2501):
#     if (number %5 == 0) and (number %7):
#         print(number)

"""
Exercise 3: Check the index
Instructions
Using this variable

names = ['Samus', 'Cortana', 'V', 'Link', 'Mario', 'Cortana', 'Samus']
Ask a user for their name, if their name is in the names list print out the index of the first occurence of the name.

Example: if input is 'Cortana' we should be printing the index 1
"""
# names = ['Samus', 'Cortana', 'V', 'Link', 'Mario', 'Cortana', 'Samus']
# your_name = input('What was your name again? : ')
# your_name = your_name.capitalize()

# for i, name in enumerate(names):
#     if your_name == name:
#         print(i)
#         break

"""
Exercise 4: Greatest Number
Instructions
Ask the user for 3 numbers and print the greatest number.

Test Data
Input the 1st number: 25
Input the 2nd number: 78
Input the 3rd number: 87

The greatest number is: 87
"""
# number1 = input('pick the first numer : ')
# number2 = input('pick the second numer : ')
# number3 = input('pick the third number: ')

# print(f'the greatest number is {max(number1, number2, number3)}')
    
"""
Exercise 6: Words and letters
Instructions
1. Ask a user for 7 words, store them in a list named words.
2. Ask the user for a single character, store it in a variable called letter.
3. Loop through the words list and print the index of the first appearence of the letter variable in each word of the list.
4. If the letter doesn't exist in one of the words, print a friendly message with the word and the letter.
"""
# words = [(input(f'pick word number {i+1}: ')) for i in (range(7))]
# letter = (input('enter a single character: '))

# for word in words:
#     if letter in word:
#         print(f'letter {letter} in word {word} at index {word.index(letter)}')
#     else: print(f'letter {letter} not in {word}')

"""
Exercise 5: The Alphabet
Instructions
1.Create a string of all the letters in the alphabet
2.Loop over each letter and print a message that contains the letter and whether its a vowel or a consonant.
"""

# alphabet_str =  "".join(chr(i) for i in (range(ord('a'),ord('z')+1))) #basically what i'm doin up here is : creating a range from the unicode value of a to the unicode value of z +1 (because range) and using the collection i runthrough it with a loop take each character transforming it to a unicode and joining it to a string
# print(alphabet_str)
# vowels = 'aeiou'
# for l in alphabet_str:
#     if l in vowels:
#         print(f'\'{l}\' is a vowel')
#     else: print(f'\'{l}\' is a consonant')

"""
Exercise 6: Words and letters
Instructions
1. Ask a user for 7 words, store them in a list named words.
2. Ask the user for a single character, store it in a variable called letter.
3. Loop through the words list and print the index of the first appearence of the letter variable in each word of the list.
4. If the letter doesn't exist in one of the words, print a friendly message with the word and the letter.
"""


word_list = [input(f'please enter word {i}: ') for i in range(1,8)]
# word_list = [input(f'please enter word {i}: ') for i in range(1,3)] TEST##
letter = input("Please enter a single character: ")

for word in word_list:
    if letter in word:
        print(f"the letter {letter} is first found in the index {word.index(letter)} of the word {word}") 
    else:
        print(f"the letter {letter} does't exist in {word}")

"""
Exercise 7: Min, Max, Sum
Instructions
 Create a list of numbers from one to one million and then use min() and max() to make sure your list actually starts at one and ends at one million. Use the sum() function to see how quickly Python can add a million numbers.
"""

##    need to finish

